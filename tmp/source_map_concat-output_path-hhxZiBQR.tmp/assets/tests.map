{"version":3,"sources":["myapp/tests/acceptance/index-test.js","myapp/tests/acceptance/index-test.jshint.js","myapp/tests/app.jshint.js","myapp/tests/helpers/destroy-app.js","myapp/tests/helpers/destroy-app.jshint.js","myapp/tests/helpers/module-for-acceptance.js","myapp/tests/helpers/module-for-acceptance.jshint.js","myapp/tests/helpers/resolver.js","myapp/tests/helpers/resolver.jshint.js","myapp/tests/helpers/start-app.js","myapp/tests/helpers/start-app.jshint.js","myapp/tests/resolver.jshint.js","myapp/tests/router.jshint.js","myapp/tests/test-helper.js","myapp/tests/test-helper.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('myapp/tests/acceptance/index-test', ['exports', 'qunit', 'myapp/tests/helpers/module-for-acceptance'], function (exports, _qunit, _myappTestsHelpersModuleForAcceptance) {\n\n  (0, _myappTestsHelpersModuleForAcceptance['default'])('Acceptance | index');\n\n  (0, _qunit.test)('visiting /', function (assert) {\n    visit('/');\n    andThen(function () {\n      assert.equal(currentURL(), '/');\n    });\n  });\n\n  (0, _qunit.test)('should list available rentals.', function (assert) {\n    visit('/');\n    andThen(function () {\n      assert.equal(this.$('.listing').length, 3, \"should see 3 listings\");\n    });\n  });\n\n  (0, _qunit.test)('should link to information about the company.', function (assert) {\n    visit('/');\n    click('a:contains(\"About\")');\n    andThen(function () {\n      assert.equal(currentURL(), '/about', \"should navigate to about\");\n    });\n  });\n\n  (0, _qunit.test)('should link to contact information', function (assert) {\n    visit('/');\n    click('a:contains(\"Contact\")');\n    andThen(function () {\n      assert.equal(currentURL(), '/contact', \"should navigate to contact\");\n    });\n  });\n\n  (0, _qunit.test)('should filter the list of rentals by city.', function (assert) {\n    visit('/');\n    fillIn('.list-filter input', 'seattle');\n    keyEvent('.list-filter input', 'keyup', 69);\n    andThen(function () {\n      assert.equal(this.$('.listing').length, 1, \"should show 1 listing\");\n      assert.equal(this.$(\".listing .location:contains('Seattle')\").length, 1, \"should contain 1 listing with location Seattle\");\n    });\n  });\n});","define('myapp/tests/acceptance/index-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/index-test.js should pass jshint.');\n  });\n});","define('myapp/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('myapp/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('myapp/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('myapp/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'myapp/tests/helpers/start-app', 'myapp/tests/helpers/destroy-app'], function (exports, _qunit, _myappTestsHelpersStartApp, _myappTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _myappTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _myappTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('myapp/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('myapp/tests/helpers/resolver', ['exports', 'myapp/resolver', 'myapp/config/environment'], function (exports, _myappResolver, _myappConfigEnvironment) {\n\n  var resolver = _myappResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _myappConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _myappConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('myapp/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('myapp/tests/helpers/start-app', ['exports', 'ember', 'myapp/app', 'myapp/config/environment'], function (exports, _ember, _myappApp, _myappConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _myappConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _myappApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('myapp/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('myapp/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('myapp/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('myapp/tests/test-helper', ['exports', 'myapp/tests/helpers/resolver', 'ember-qunit'], function (exports, _myappTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_myappTestsHelpersResolver['default']);\n});","define('myapp/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('myapp/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}